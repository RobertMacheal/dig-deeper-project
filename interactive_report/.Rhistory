# Extraire les coordonnées
coords <- json$plot$decomposition$coordinates
coord_df <- as.data.frame(coords)
colnames(coord_df) <- paste0("PC", seq_len(ncol(coords)))
coord_df$SampleID <- json$plot$decomposition$sample_ids
# Extraire les métadonnées
metadata <- as.data.frame(json$plot$metadata, stringsAsFactors = FALSE)
colnames(metadata) <- json$plot$metadata_headers
# Joindre coordonnées + métadonnées
df <- left_join(coord_df, metadata, by = "SampleID")
# Créer un scatter plot interactif
plot_ly(
df,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Establishment,
text = ~SampleID,
type = "scatter3d",
mode = "markers",
marker = list(size = 4),
layout(
title = list(
text = "PCoA Bray-Curtis - Coloré par type d'Establishment",
font = list(size = 18),
x = 0.5
)
)
library(jsonlite)
library(tidyverse)
json <- fromJSON("data/s09_beta_bray_curtis_emperor_pcoa_SZ/64a27d7f-de80-4223-8942-3b552420354a/data/emperor.json")
# Extraire les coordonnées
coords <- json$plot$decomposition$coordinates
coord_df <- as.data.frame(coords)
colnames(coord_df) <- paste0("PC", seq_len(ncol(coords)))
coord_df$SampleID <- json$plot$decomposition$sample_ids
# Extraire les métadonnées
metadata <- as.data.frame(json$plot$metadata, stringsAsFactors = FALSE)
colnames(metadata) <- json$plot$metadata_headers
# Joindre coordonnées + métadonnées
df <- left_join(coord_df, metadata, by = "SampleID")
# Créer un scatter plot interactif
plot_ly(
df,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Establishment,
text = ~SampleID,
type = "scatter3d",
mode = "markers",
marker = list(size = 4),
layout(
title = list(
text = "PCoA Bray-Curtis - Empereur Plot Interactif",
font = list(size = 18),
x = 0.5
))
)
library(jsonlite)
library(tidyverse)
json <- fromJSON("data/s09_beta_bray_curtis_emperor_pcoa_SZ/64a27d7f-de80-4223-8942-3b552420354a/data/emperor.json")
# Extraire les coordonnées
coords <- json$plot$decomposition$coordinates
coord_df <- as.data.frame(coords)
colnames(coord_df) <- paste0("PC", seq_len(ncol(coords)))
coord_df$SampleID <- json$plot$decomposition$sample_ids
# Extraire les métadonnées
metadata <- as.data.frame(json$plot$metadata, stringsAsFactors = FALSE)
colnames(metadata) <- json$plot$metadata_headers
# Joindre coordonnées + métadonnées
df <- left_join(coord_df, metadata, by = "SampleID")
# Créer un scatter plot interactif
plot_ly(
df,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Establishment,
text = ~SampleID,
type = "scatter3d",
mode = "markers",
marker = list(size = 4) %>%
layout(title = "PCoA Bray-Curtis - Empereur Plot Interactif")
)
library(jsonlite)
library(tidyverse)
json <- fromJSON("data/s09_beta_bray_curtis_emperor_pcoa_SZ/64a27d7f-de80-4223-8942-3b552420354a/data/emperor.json")
# Extraire les coordonnées
coords <- json$plot$decomposition$coordinates
coord_df <- as.data.frame(coords)
colnames(coord_df) <- paste0("PC", seq_len(ncol(coords)))
coord_df$SampleID <- json$plot$decomposition$sample_ids
# Extraire les métadonnées
metadata <- as.data.frame(json$plot$metadata, stringsAsFactors = FALSE)
colnames(metadata) <- json$plot$metadata_headers
# Joindre coordonnées + métadonnées
df <- left_join(coord_df, metadata, by = "SampleID")
# Créer un scatter plot interactif
plot_ly(
df,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Establishment,
text = ~SampleID,
type = "scatter3d",
mode = "markers",
marker = list(size = 4)
)
# Charger le fichier
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
# Aperçu des colonnes
colnames(funguild)
funguild %>%
count(Guild, sort = TRUE) %>%
drop_na() %>%
ggplot(aes(x = reorder(Guild, n), y = n)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "Guild fongique", y = "Nombre d'OTUs", title = "Distribution des Guilds fongiques")
View(funguild)
# Charger le fichier
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
funguild_long <- funguild %>%
pivot_longer(cols = starts_with("Whitelands_2018"), # adapte ce pattern à tous tes sites
names_to = "Site", values_to = "Abundance") %>%
filter(!is.na(Guild), Abundance > 0)
# Abondance totale par site et guild
funguild_long %>%
group_by(Site, Guild) %>%
summarise(Total = sum(Abundance), .groups = "drop") %>%
ggplot(aes(x = Site, y = Total, fill = Guild)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Abondance des guilds fongiques par site")
# Charger le fichier
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
funguild_long <- funguild %>%
pivot_longer(cols = starts_with("Whitelands_2018"), # adapte ce pattern à tous tes sites
names_to = "Site", values_to = "Abundance") %>%
filter(!is.na(Guild), Abundance > 0)
library(vegan)
diversity_table <- funguild_long %>%
group_by(Site, Guild) %>%
summarise(Abundance = sum(Abundance), .groups = "drop") %>%
pivot_wider(names_from = Guild, values_from = Abundance, values_fill = 0)
# Calculer l'indice de Shannon par site
diversity_table %>%
column_to_rownames("Site") %>%
vegan::diversity(index = "shannon")
View(diversity_table)
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("metadata.tsv")  # adapte le chemin si besoin
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/metadata.tsv")  # adapte le chemin si besoin
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/GP_metadata.tsv")  # adapte le chemin si besoin
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Establishment, y = Shannon, fill = Establishment)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5, colour = "black") +
theme_minimal() +
labs(title = "Indice de Shannon par type d'établissement",
x = "Type d’établissement",
y = "Indice de Shannon") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Establishment, y = Shannon, fill = Establishment)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Indice de Shannon par type d'établissement",
x = "Type d’établissement",
y = "Indice de Shannon") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = `Trophic Mode`, y = Shannon, fill = `Trophic Mode`)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Diversité de Shannon par mode trophique",
x = "Trophic Mode",
y = "Indice de Shannon") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(shannon_df)
View(shannon_merged)
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>%
filter(!is.na(Shannon), !is.na(Site))
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = `Trophic Mode`, y = Shannon, fill = `Trophic Mode`)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Diversité de Shannon par mode trophique",
x = "Trophic Mode",
y = "Indice de Shannon") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>% filter(
!is.na(Shannon),
!Site %in% c("Taxon", "Taxon Level", "Trophic Mode", "Guild",
"Growth Morphology", "Trait", "Confidence Ranking",
"Notes", "Citation/Source")
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(df_clean, aes(x = Site, y = Shannon, fill = Site)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Indice de Shannon par site",
x = "Site",
y = "Shannon Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>% filter(
!is.na(Shannon),
!Site %in% c("Taxon", "Taxon Level", "Trophic Mode", "Guild",
"Growth Morphology", "Trait", "Confidence Ranking",
"Notes", "Citation/Source")
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Site, y = Shannon, fill = Site)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Indice de Shannon par site",
x = "Site",
y = "Shannon Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>% filter(
!is.na(Shannon),
!Site %in% c("Taxon", "Taxon Level", "Trophic Mode", "Guild",
"Growth Morphology", "Trait", "Confidence Ranking",
"Notes", "Citation/Source")
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Establishment, y = Shannon, fill = Site)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Indice de Shannon par site",
x = "Site",
y = "Shannon Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>% filter(
!is.na(Shannon),
!Site %in% c("Taxon", "Taxon Level", "Trophic Mode", "Guild",
"Growth Morphology", "Trait", "Confidence Ranking",
"Notes", "Citation/Source")
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Establishment, y = Shannon, fill = Establishment)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +
theme_minimal() +
labs(title = "Indice de Shannon par estblishment",
x = "Site",
y = "Shannon Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(vegan)
funguild <- read_tsv("data/funguild_input.guilds_matched.txt")
abundance_data <- funguild %>%
select(matches("^[A-Za-z].*")) %>%
select(-c(`OTU ID`, Taxonomy)) %>%
mutate(across(everything(), as.numeric))
abundance_matrix <- as.data.frame(t(abundance_data))
colnames(abundance_matrix) <- funguild$`OTU ID`
abundance_matrix$Site <- rownames(abundance_matrix)
shannon_index <- abundance_matrix %>%
select(-Site) %>%
diversity(index = "shannon")
shannon_df <- tibble(
Site = rownames(abundance_matrix),
Shannon = shannon_index
)
shannon_df<- shannon_df %>% filter(
!is.na(Shannon),
!Site %in% c("Taxon", "Taxon Level", "Trophic Mode", "Guild",
"Growth Morphology", "Trait", "Confidence Ranking",
"Notes", "Citation/Source")
)
metadata <- read_tsv("data/GP_metadata.txt")  # adapte le chemin si besoin
# Joindre les deux jeux de données
shannon_merged <- left_join(shannon_df, metadata, by = "Site")
ggplot(shannon_merged, aes(x = Establishment, y = Shannon, fill = Establishment)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Indice de Shannon par estblishment",
x = "Site",
y = "Shannon Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(abundance_data)
View(abundance_matrix)
